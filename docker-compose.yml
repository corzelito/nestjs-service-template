version: "3.8"

services:
  # my-service-production:
  #   container_name: my-service-production
  #   build:
  #     target: production
  #     context: .
  #     args:
  #       - PORT=${PORT:-3000}
  #   ports:
  #     - "${PORT:-3000}:${PORT:-3000}"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: "512m"
  #       reservations:
  #         cpus: "0.25"
  #         memory: "256m"

  my-service-dev:
    container_name: my-service-dev
    restart: unless-stopped
    env_file: .env
    build:
      target: dev
      context: .
      args:
        - PORT=${PORT:-3000}
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
      - "9229:9229"
    volumes:
      - .:/app
      - node_modules:/app/node_modules/
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512m"
        reservations:
          cpus: "0.25"
          memory: "256m"

  postgres-development: # Nombre del servicio PostgreSQL para desarrollo
    image: postgres:14.3
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    container_name: my-service-postgres-development # Nombre del contenedor
    volumes:
      - ./postgres:/var/lib/postgresql/data # Puedes ajustar la ruta de volumen seg√∫n tus necesidades

volumes:
  node_modules:
